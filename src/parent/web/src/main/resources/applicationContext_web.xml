<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc" 
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/aop   
        http://www.springframework.org/schema/aop/spring-aop-3.2.xsd   
        http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd   
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-3.2.xsd   
        http://www.springframework.org/schema/mvc   
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-3.2.xsd  
        http://www.springframework.org/schema/tx   
        http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
        
	<beans profile="source,test">
		 
		
		 <!-- 支持RESTful配置:将拦截的静态资源js,css等放过去 -->
		 <mvc:default-servlet-handler/>	 
		 <!--  AOP 注解扫描-->
		 <aop:aspectj-autoproxy proxy-target-class="true"/>
		 <!-- 引入properties文件 -->
		<bean
			class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" id="kv">
			<property name="locations">
				<list>				 
					<value>classpath:webconfig.properties</value>
					<!-- <value>classpath:dmsFramework.properties</value>
					<value>classpath*:*_sql.properties</value> -->
				</list>
			</property>
		</bean>
		 
		 		<!-- 数据库配置 -->
	<!-- <bean id="ds" class="org.apache.commons.dbcp.BasicDataSource">
			<property name="url" value="${net.tenie.url}"></property>
			<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
			<property name="username" value="${net.tenie.username}"></property>
			<property name="password" value="${net.tenie.password}"></property>
		</bean> -->
		
		 <bean id="ds"   class="org.apache.commons.dbcp.BasicDataSource"    destroy-method="close">  
	     
	        <property name="url" value="${net.tenie.url}"></property>
			<property name="driverClassName" value="${net.tenie.driver}"></property>
			<property name="username" value="${net.tenie.username}"></property>
			<property name="password" value="${net.tenie.password}"></property>
	        <!--maxActive: 最大连接数量-->    
	        <property name="maxActive" value="150"/>  
	        <!--minIdle: 最小空闲连接-->    
	        <property name="minIdle" value="5"/>  
	        <!--maxIdle: 最大空闲连接-->    
	        <property name="maxIdle" value="20"/>  
	        <!--initialSize: 初始化连接-->    
	        <property name="initialSize" value="30"/>  
	        <!-- 连接被泄露时是否打印 -->  
	        <property name="logAbandoned" value="true"/>  
	        <!--removeAbandoned: 是否自动回收超时连接-->    
	        <property name="removeAbandoned"  value="true"/>  
	        <!--removeAbandonedTimeout: 超时时间(以秒数为单位)-->    
	        <property name="removeAbandonedTimeout" value="10"/>  
	        <!--maxWait: 超时等待时间以毫秒为单位 -->  
	        <property name="maxWait" value="1000"/>  
	        <!-- 在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位. -->  
	        <property name="timeBetweenEvictionRunsMillis" value="10000"/>  
	        <!--  在每次空闲连接回收器线程(如果有)运行时检查的连接数量 -->  
	        <property name="numTestsPerEvictionRun" value="10"/>  
	        <!-- 1000 * 60 * 30  连接在池中保持空闲而不被空闲连接回收器线程-->  
	        <property name="minEvictableIdleTimeMillis" value="10000"/>  
	        <property name="validationQuery" value="SELECT NOW() FROM DUAL"/>  
    </bean> 
		<!-- jdbcTemplate -->
	  <bean id="dev1JdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">  
     	   <property name="dataSource" ref="ds" />  
	    </bean> 
	   <!--  Springs事务管理器
	   <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		   <property name="dataSource" ref="ds" /> 
		   <property name="defaultTimeout" value="2"/> 
	  </bean> -->
	  <!-- 注解型事务
	  <tx:annotation-driven transaction-manager="txManager"/> -->
	  
	   <!--  <tx:annotation-driven transaction-manager="txManager" proxy-target-class="true"/>
	     <tx:advice id="txAdvice" transaction-manager="txManager">
			<tx:attributes>
				<tx:method name="find*" read-only="true"/>
				<tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>propagation:事务传播属性
				<tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
				<tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
				<tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.ClassNotFoundException"/> 对于非runtimeException,需要特别制定异常类型
			</tx:attributes>
		</tx:advice>
		<aop:config proxy-target-class="true">
			<aop:advisor advice-ref="txAdvice" pointcut="within(net.tenie.controller..*)"/>  事务管理用了aop技术
		</aop:config> -->
		
		
		
	    <!--  系统拦截器 -->
	<bean id="logInterceptor" class="net.tenie.web.interceptor.LoginInterceptor"/> 
	<!-- mvc 配置 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <ref bean="logInterceptor"/>
        </mvc:interceptor>
       <!--  <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <ref bean="aclInterceptor"/>
        </mvc:interceptor> -->
    </mvc:interceptors> 
    
    
    
    <!--  Email 配置-->
     <!-- mailSender配置 -->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${mail.smtp.host}" />
        <property name="username" value="${mail.smtp.username}" />
        <property name="password" value="${mail.smtp.password}" />
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.auth">${mail.smtp.auth}</prop>
                <prop key="mail.smtp.timeout">${mail.smtp.timeout}</prop>
            </props>
        </property>
    </bean>
    
    <!-- mailSender配置，qq需要SSL
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${mail.smtp.host}" />
        <property name="port" value="${mail.smtp.port}" />
        <property name="username" value="${mail.smtp.username}" />
        <property name="password" value="${mail.smtp.password}" />
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.timeout">${mail.smtp.timeout}</prop>
                <prop key="mail.smtp.auth">${mail.smtp.auth}</prop>
                <prop key="mail.smtp.starttls.enable">${mail.smtp.starttls.enable}</prop>
                <prop key="mail.smtp.socketFactory.port">${mail.smtp.port}</prop>
                <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
                <prop key="mail.smtp.socketFactory.fallback">false</prop>
            </props>
        </property>
    </bean> -->
    
     <!-- Freemarker 模板配置 -->
    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath">
            <value>/WEB-INF/ftl/</value>
        </property>
        <property name="freemarkerSettings"><!-- 设置FreeMarker环境属性 -->
            <props>
                <prop key="template_update_delay">5</prop><!--刷新模板的周期，单位为秒 -->
                <prop key="default_encoding">UTF-8</prop><!--模板的编码格式 -->
                <prop key="locale">UTF-8</prop><!-- 本地化设置 -->
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
                <prop key="time_format">HH:mm:ss</prop>
                <prop key="number_format">0.####</prop>
                <prop key="boolean_format">true,false</prop>
                <prop key="whitespace_stripping">true</prop>
                <prop key="tag_syntax">auto_detect</prop>
                <prop key="url_escaping_charset">UTF-8</prop>
            </props>
        </property>
    </bean>
    <!--视图解释器 -->  
	<bean id="viewResolver"  
	      class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">  
	    <property name="suffix">  
	        <value>.ftl</value>  
	    </property>  
	    <property name="contentType" value="text/html;charset=UTF-8"></property>  
	</bean>

	<!-- 获得验证框架 -->
	<!-- 获得验证框架 -->
		<bean id="validationFactory" class="javax.validation.Validation" factory-method="buildDefaultValidatorFactory"/>
		<bean id="Validator" factory-bean="validationFactory" factory-method="getValidator" />    
		
	<!-- 扫描注解bean -->	
  	<context:component-scan base-package="net.tenie.**" />
	<context:annotation-config/>  
	<mvc:annotation-driven></mvc:annotation-driven>
  	
	</beans>

</beans>
